#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}  Laravel + Vue.js 3 + Pinia${NC}"
    echo -e "${BLUE}================================${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "composer.json" ] || [ ! -f "artisan" ]; then
    print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Laravel –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

print_header

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ Docker Compose."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ Docker
if ! docker info &> /dev/null; then
    print_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker."
    exit 1
fi

# === –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ï–ö–¢–ê ===
print_message "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        print_message "–°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ .env.example..."
        cp .env.example .env
        
        print_message "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Docker..."
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è MySQL
        sed -i.bak 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
        
        # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if ! grep -q "^DB_HOST=" .env; then
            echo "DB_HOST=mysql" >> .env
        else
            sed -i.bak 's/^# DB_HOST=.*/DB_HOST=mysql/' .env
            sed -i.bak 's/^DB_HOST=.*/DB_HOST=mysql/' .env
        fi
        
        if ! grep -q "^DB_PORT=" .env; then
            echo "DB_PORT=3306" >> .env
        else
            sed -i.bak 's/^# DB_PORT=.*/DB_PORT=3306/' .env
            sed -i.bak 's/^DB_PORT=.*/DB_PORT=3306/' .env
        fi
        
        if ! grep -q "^DB_DATABASE=" .env; then
            echo "DB_DATABASE=laravel" >> .env
        else
            sed -i.bak 's/^# DB_DATABASE=.*/DB_DATABASE=laravel/' .env
            sed -i.bak 's/^DB_DATABASE=.*/DB_DATABASE=laravel/' .env
        fi
        
        if ! grep -q "^DB_USERNAME=" .env; then
            echo "DB_USERNAME=sail" >> .env
        else
            sed -i.bak 's/^# DB_USERNAME=.*/DB_USERNAME=sail/' .env
            sed -i.bak 's/^DB_USERNAME=.*/DB_USERNAME=sail/' .env
        fi
        
        if ! grep -q "^DB_PASSWORD=" .env; then
            echo "DB_PASSWORD=password" >> .env
        else
            sed -i.bak 's/^# DB_PASSWORD=.*/DB_PASSWORD=password/' .env
            sed -i.bak 's/^DB_PASSWORD=.*/DB_PASSWORD=password/' .env
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Docker –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if ! grep -q "^WWWUSER=" .env; then
            echo "WWWUSER=$(id -u)" >> .env
        fi
        
        if ! grep -q "^WWWGROUP=" .env; then
            echo "WWWGROUP=$(id -g)" >> .env
        fi
        
        # –£–¥–∞–ª—è–µ–º backup —Ñ–∞–π–ª
        rm -f .env.bak
        
        print_message "‚úì .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker (MySQL, Sail)"
    else
        print_error ".env.example —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω! –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å .env"
        exit 1
    fi
else
    print_message "‚úì .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ .env –¥–ª—è Docker
    if grep -q "DB_CONNECTION=sqlite" .env; then
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SQLite. –û–±–Ω–æ–≤–ª—è–µ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker MySQL..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env –¥–ª—è Docker
        sed -i.bak 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        sed -i.bak 's/^# DB_HOST=.*/DB_HOST=mysql/' .env
        sed -i.bak 's/^DB_HOST=.*/DB_HOST=mysql/' .env
        sed -i.bak 's/^# DB_PORT=.*/DB_PORT=3306/' .env  
        sed -i.bak 's/^DB_PORT=.*/DB_PORT=3306/' .env
        sed -i.bak 's/^# DB_DATABASE=.*/DB_DATABASE=laravel/' .env
        sed -i.bak 's/^DB_DATABASE=.*/DB_DATABASE=laravel/' .env
        sed -i.bak 's/^# DB_USERNAME=.*/DB_USERNAME=sail/' .env
        sed -i.bak 's/^DB_USERNAME=.*/DB_USERNAME=sail/' .env
        sed -i.bak 's/^# DB_PASSWORD=.*/DB_PASSWORD=password/' .env
        sed -i.bak 's/^DB_PASSWORD=.*/DB_PASSWORD=password/' .env
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Docker –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if ! grep -q "^WWWUSER=" .env; then
            echo "WWWUSER=$(id -u)" >> .env
        fi
        
        if ! grep -q "^WWWGROUP=" .env; then
            echo "WWWGROUP=$(id -g)" >> .env
        fi
        
        rm -f .env.bak
        print_message "‚úì .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ vendor –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -d "vendor" ] || [ ! -f "vendor/bin/sail" ]; then
    print_warning "–ü–∞–ø–∫–∞ vendor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–ø–æ–ª–Ω–∞—è. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Composer –ª–æ–∫–∞–ª—å–Ω–æ
    if command -v composer &> /dev/null; then
        print_message "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Composer –ª–æ–∫–∞–ª—å–Ω–æ..."
        composer install --no-interaction
    else
        print_message "Composer –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–µ–º Docker –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Docker –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        if command -v docker &> /dev/null; then
            docker run --rm -v "$(pwd)":/app -w /app composer:latest composer install --no-interaction --ignore-platform-reqs
        else
            print_error "–ù–∏ Composer, –Ω–∏ Docker –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!"
            print_error "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Composer –ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç."
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ sail —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω
    if [ ! -f "vendor/bin/sail" ]; then
        print_error "Laravel Sail –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."
        exit 1
    fi
else
    print_message "‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Composer —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ node_modules (–¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
if [ ! -d "node_modules" ]; then
    print_warning "Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ Sail"
else
    print_message "‚úì Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
fi

print_message "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø—É—â–µ–Ω—ã)..."
./vendor/bin/sail down -v

print_message "–ó–∞–ø—É—Å–∫–∞–µ–º Laravel Sail..."
./vendor/bin/sail up -d

print_message "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
if ! ./vendor/bin/sail ps | grep -q "Up"; then
    print_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ./vendor/bin/sail logs"
    exit 1
fi

print_message "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Composer..."
./vendor/bin/sail composer install

print_message "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ NPM..."
./vendor/bin/sail npm install

print_message "–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
./vendor/bin/sail artisan migrate

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å dev server
while true; do
    read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy–î–¥]$ ]]; then
        print_message "–ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏..."
        ./vendor/bin/sail artisan db:seed --class=ProductsSeeder
        break
    elif [[ $REPLY =~ ^[Nn–ù–Ω]$ ]]; then
        print_message "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã."
        break
    else
        print_error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'y' –¥–ª—è –¥–∞ –∏–ª–∏ 'n' –¥–ª—è –Ω–µ—Ç"
    fi
done 

print_message "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)..."
./vendor/bin/sail artisan key:generate

print_message "–û—á–∏—â–∞–µ–º –∫—ç—à..."
./vendor/bin/sail artisan config:clear
./vendor/bin/sail artisan cache:clear
./vendor/bin/sail artisan view:clear

print_message "–°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–ª—è production..."
./vendor/bin/sail npm run build

print_header
print_message "üöÄ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
echo ""
print_message "üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: ${GREEN}http://localhost:8080${NC}"
print_message "üõ†Ô∏è  –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ${YELLOW}./vendor/bin/sail npm run dev${NC}"
print_message "üìß –ü–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç Mailpit: ${GREEN}http://localhost:8025${NC}"
print_message "üîç Meilisearch: ${GREEN}http://localhost:7700${NC}"
echo ""
print_message "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${YELLOW}./vendor/bin/sail down${NC}"
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: ${YELLOW}./vendor/bin/sail restart${NC}"
echo "  ‚Ä¢ –õ–æ–≥–∏: ${YELLOW}./vendor/bin/sail logs${NC}"
echo "  ‚Ä¢ –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: ${YELLOW}./vendor/bin/sail bash${NC}"
echo "  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã: ${YELLOW}./vendor/bin/sail test${NC}"
echo ""

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å dev server
while true; do
    read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å Vite dev server –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy–î–¥]$ ]]; then
        print_message "–ó–∞–ø—É—Å–∫–∞–µ–º Vite dev server..."
        print_warning "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
        ./vendor/bin/sail npm run dev
        break
    elif [[ $REPLY =~ ^[Nn–ù–Ω]$ ]]; then
        print_message "Vite dev server –Ω–µ –∑–∞–ø—É—â–µ–Ω. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ${YELLOW}./dev.sh${NC}"
        break
    else
        print_error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'y' –¥–ª—è –¥–∞ –∏–ª–∏ 'n' –¥–ª—è –Ω–µ—Ç"
    fi
done 